Hi All,
Recently I had an OA from a FAANG company. I wanted to share the questions and answers to those questions. Please let me know your opinions and code improvements.

The 1st question was Transaction logs.

A Company parses logs of online store user transactions/activity to flag fraudulent activity.

The log file is represented as an Array of arrays. The arrays consist of the following data:

[ <# of transactions>]

For example:

[345366 89921 45]

Note: the data is space delimited

So, the log data would look like:

[
[345366 89921 45],
[029323 38239 23]
...
]
Write a function to parse the log data to find distinct users that meet or cross a certain threshold.

The function will take in 2 inputs:
logData: Log data in form an array of arrays

threshold: threshold as an integer

Output:
It should be an array of userids that are sorted.

If same userid appears in the transaction as userid1 and userid2, it should count as one occurrence, not two.

Example:
Input:
logData:

[
[345366 89921 45],
[029323 38239 23],
[38239 345366 15],
[029323 38239 77],
[345366 38239 23],
[029323 345366 13],
[38239 38239 23]
...
]
threshold: 3

Output: [345366 , 38239, 029323]
Explanation:
Given the following counts of userids, there are only 3 userids that meet or exceed the threshold of 3.

345366 -4 , 38239 -5, 029323-3, 89921-1

def processLogs(logs, threshold):
    count = defaultdict(int)
    for log in logs:
        log = "".join(log).split()
        if log[0] != log[1]:
            count[log[1]] += 1
        count[log[0]] += 1
    res = []
    for key, values in count.items():
        if values >= threshold:
            res.append(key)
    return sorted(res, key = int, reverse = True)

logs = [
["345366 89921 45"],
["029323 38239 23"],
["38239 345366 15"],
["029323 38239 77"],
["345366 38239 23"],
["029323 345366 13"],
["38239 38239 23"]]
threshold = 3
processLogs(logs, threshold)
